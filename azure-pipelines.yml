# Maven


# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: CopyFiles@2
  displayName: "Copy Files to: $(build.artifactstagingdirectory)"
  inputs:
    SourceFolder: $(system.defaultworkingdirectory)
    Contents: '**/*.war'
    TargetFolder: $(build.artifactstagingdirectory)



- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Endpoint'
    AnalysisService: 'Veracode Upload and Scan'
    veracodeAppProfile: '$(system.teamProject)'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    createSandBox: false
    createProfile: true
    failTheBuildIfVeracodeScanDidNotInitiate: false
    scanStatusCheckInterval: '60'
    importResults: false
    failBuildOnPolicyFail: false

- task: PowerShell@2
  inputs:
    targettype: inline
    script: "Write-Output 'Download PipelineScanner'\n(New-Object System.Net.WebClient).DownloadFile('https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip', '/pipeline-scan-LATEST.zip') \nWrite-Output 'Unzip PipelineScanner' \nExpand-Archive -force /pipeline-scan-LATEST.zip \nWrite-Output 'Run PipelineScanner'\njava -jar .\\pipeline-scan-LATEST\\pipeline-scan.jar -vid $env:API_ID -vkey $env:API_KEY -f $(build.artifactstagingdirectory)\\target\\*.war"